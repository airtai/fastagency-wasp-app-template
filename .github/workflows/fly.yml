name: Fly Deployment Pipeline

on:
  push:
    branches: [ "main"]
  # or manually
  workflow_dispatch:

jobs:
  check_which_job_to_run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      is_setup: ${{ steps.checkfiles.outputs.is_setup }}
      is_setup_pr: ${{ steps.pr_check.outputs.is_pr_for_setup }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: 8BitJonny/gh-get-current-pr@3.0.0
        id: PR
      - run: |
          echo "Your PR number is ${{ steps.PR.outputs.number }} and its JSON is ${{ steps.PR.outputs.pr }}"
          echo "Your PR body is ${{ steps.PR.outputs.pr_body }}"

          if [[ "${{ steps.PR.outputs.pr_body }}" == "This is an automated pull request to add the Fly.io configuration files." ]]; then
            echo "is_pr_for_setup=true" >> $GITHUB_OUTPUT
          else
            echo "is_pr_for_setup=false" >> $GITHUB_OUTPUT
          fi
          echo "The value of is_pr_for_setup is:"
          cat $GITHUB_OUTPUT
        id: pr_check
        shell: bash

      - name: Check if the fly-client.toml and fly-server.toml files exist
        id: checkfiles
        run: |
          echo "Listing all files in app directory:"
          ls -la app
          [ -f app/fly-client.toml ] || [ -f app/fly-server.toml ] && echo "is_setup=false" >> $GITHUB_OUTPUT || echo "is_setup=true" >> $GITHUB_OUTPUT
          echo "The value of is_setup is:"
          cat $GITHUB_OUTPUT
        shell: bash

  onetime_app_setup:
    needs: check_which_job_to_run
    if: needs.check_which_job_to_run.outputs.is_setup == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install wasp
        run: |
          curl -sSL https://get.wasp-lang.dev/installer.sh | sh
          echo "$HOME/.wasp/bin" >> $GITHUB_PATH
      
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy wasp application to fly
        run: |
          TIMESTAMP=$(date +%s)
          APP_NAME=${REACT_APP_NAME// /-}-$TIMESTAMP
          APP_NAME=${APP_NAME,,}
          echo "Setting up the app with name: $APP_NAME"
          wasp deploy fly setup $APP_NAME mia
          echo "Updating the machine configuration in the fly toml files"
          for file in fly-client.toml fly-server.toml
          do
            sed -i 's/cpus = 1/cpus = 4/g' $file
            sed -i 's/min_machines_running = 0/min_machines_running = 1/g' $file
          done
          wasp deploy fly create-db mia
          wasp deploy fly deploy
          REACT_APP_NAME=$REACT_APP_NAME REACT_APP_SUPPORT_EMAIL=$REACT_APP_SUPPORT_EMAIL wasp deploy fly cmd secrets set \
          FASTAGENCY_APPLICATION_UUID=$FASTAGENCY_APPLICATION_UUID FASTAGENCY_SERVER_URL=$FASTAGENCY_SERVER_URL --context=server
        working-directory: app
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FASTAGENCY_APPLICATION_UUID: ${{ secrets.FASTAGENCY_APPLICATION_UUID }}
          REACT_APP_NAME: ${{ vars.REACT_APP_NAME }}
          REACT_APP_SUPPORT_EMAIL: ${{ vars.REACT_APP_SUPPORT_EMAIL }}
          FASTAGENCY_SERVER_URL: ${{ vars.FASTAGENCY_SERVER_URL }}

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          base: "main"
          title: "Add Fly.io configuration files"
          commit-message: "Add Fly.io configuration files"
          body: "This is an automated pull request to add the Fly.io configuration files."
      
      - name: Check outputs
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"


  deployment:
    needs: check_which_job_to_run
    if: needs.check_which_job_to_run.outputs.is_setup == 'false' && needs.check_which_job_to_run.outputs.is_setup_pr == 'false'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install wasp
        run: |
          curl -sSL https://get.wasp-lang.dev/installer.sh | sh
          echo "$HOME/.wasp/bin" >> $GITHUB_PATH
      
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Run the wasp fly deploy command
        working-directory: app
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FASTAGENCY_APPLICATION_UUID: ${{ secrets.FASTAGENCY_APPLICATION_UUID }}
          REACT_APP_NAME: ${{ vars.REACT_APP_NAME }}
          REACT_APP_SUPPORT_EMAIL: ${{ vars.REACT_APP_SUPPORT_EMAIL }}
          FASTAGENCY_SERVER_URL: ${{ vars.FASTAGENCY_SERVER_URL }}

        run: |
          wasp deploy fly deploy
          REACT_APP_NAME=$REACT_APP_NAME REACT_APP_SUPPORT_EMAIL=$REACT_APP_SUPPORT_EMAIL wasp deploy fly cmd secrets set \
          FASTAGENCY_APPLICATION_UUID=$FASTAGENCY_APPLICATION_UUID FASTAGENCY_SERVER_URL=$FASTAGENCY_SERVER_URL --context=server
